// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

#include "chat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_chat_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateWeb;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateWebFailure;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateWebSuccess;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreateAccountWeb;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreateAccountWebFailure;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_chat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreateAccountWebSuccess;
}  // namespace protobuf_chat_2eproto
class CreateAccountWebDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAccountWeb>
      _instance;
} _CreateAccountWeb_default_instance_;
class AuthenticateWebDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateWeb>
      _instance;
} _AuthenticateWeb_default_instance_;
class CreateAccountWebSuccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAccountWebSuccess>
      _instance;
} _CreateAccountWebSuccess_default_instance_;
class CreateAccountWebFailureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAccountWebFailure>
      _instance;
} _CreateAccountWebFailure_default_instance_;
class AuthenticateWebSuccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateWebSuccess>
      _instance;
} _AuthenticateWebSuccess_default_instance_;
class AuthenticateWebFailureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateWebFailure>
      _instance;
} _AuthenticateWebFailure_default_instance_;
class ServerMessageWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessageWrapper>
      _instance;
  const ::CreateAccountWebSuccess* m1_;
  const ::CreateAccountWebFailure* m2_;
  const ::AuthenticateWebSuccess* m3_;
  const ::AuthenticateWebFailure* m4_;
} _ServerMessageWrapper_default_instance_;
class ClientMessageWrapperDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessageWrapper>
      _instance;
  const ::CreateAccountWeb* m1_;
  const ::AuthenticateWeb* m2_;
} _ClientMessageWrapper_default_instance_;
namespace protobuf_chat_2eproto {
static void InitDefaultsCreateAccountWeb() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CreateAccountWeb_default_instance_;
    new (ptr) ::CreateAccountWeb();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateAccountWeb::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateAccountWeb =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateAccountWeb}, {}};

static void InitDefaultsAuthenticateWeb() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AuthenticateWeb_default_instance_;
    new (ptr) ::AuthenticateWeb();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AuthenticateWeb::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateWeb =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthenticateWeb}, {}};

static void InitDefaultsCreateAccountWebSuccess() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CreateAccountWebSuccess_default_instance_;
    new (ptr) ::CreateAccountWebSuccess();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateAccountWebSuccess::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateAccountWebSuccess =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateAccountWebSuccess}, {}};

static void InitDefaultsCreateAccountWebFailure() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CreateAccountWebFailure_default_instance_;
    new (ptr) ::CreateAccountWebFailure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateAccountWebFailure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateAccountWebFailure =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateAccountWebFailure}, {}};

static void InitDefaultsAuthenticateWebSuccess() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AuthenticateWebSuccess_default_instance_;
    new (ptr) ::AuthenticateWebSuccess();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AuthenticateWebSuccess::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateWebSuccess =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthenticateWebSuccess}, {}};

static void InitDefaultsAuthenticateWebFailure() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AuthenticateWebFailure_default_instance_;
    new (ptr) ::AuthenticateWebFailure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AuthenticateWebFailure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AuthenticateWebFailure =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuthenticateWebFailure}, {}};

static void InitDefaultsServerMessageWrapper() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ServerMessageWrapper_default_instance_;
    new (ptr) ::ServerMessageWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerMessageWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ServerMessageWrapper =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsServerMessageWrapper}, {
      &protobuf_chat_2eproto::scc_info_CreateAccountWebSuccess.base,
      &protobuf_chat_2eproto::scc_info_CreateAccountWebFailure.base,
      &protobuf_chat_2eproto::scc_info_AuthenticateWebSuccess.base,
      &protobuf_chat_2eproto::scc_info_AuthenticateWebFailure.base,}};

static void InitDefaultsClientMessageWrapper() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientMessageWrapper_default_instance_;
    new (ptr) ::ClientMessageWrapper();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientMessageWrapper::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ClientMessageWrapper =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsClientMessageWrapper}, {
      &protobuf_chat_2eproto::scc_info_CreateAccountWeb.base,
      &protobuf_chat_2eproto::scc_info_AuthenticateWeb.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAccountWeb.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthenticateWeb.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAccountWebSuccess.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateAccountWebFailure.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthenticateWebSuccess.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AuthenticateWebFailure.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerMessageWrapper.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessageWrapper.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWeb, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWeb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWeb, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWeb, plaintextpassword_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWeb, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWeb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWeb, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWeb, plaintextpassword_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWebSuccess, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWebSuccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWebSuccess, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWebFailure, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWebFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateAccountWebFailure, reason_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWebSuccess, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWebSuccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWebSuccess, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWebSuccess, creationdate_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWebFailure, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWebFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AuthenticateWebFailure, reason_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessageWrapper, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessageWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessageWrapper, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessageWrapper, messageid_),
  offsetof(::ServerMessageWrapperDefaultTypeInternal, m1_),
  offsetof(::ServerMessageWrapperDefaultTypeInternal, m2_),
  offsetof(::ServerMessageWrapperDefaultTypeInternal, m3_),
  offsetof(::ServerMessageWrapperDefaultTypeInternal, m4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessageWrapper, clientindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessageWrapper, msg_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientMessageWrapper, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientMessageWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientMessageWrapper, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientMessageWrapper, messageid_),
  offsetof(::ClientMessageWrapperDefaultTypeInternal, m1_),
  offsetof(::ClientMessageWrapperDefaultTypeInternal, m2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientMessageWrapper, clientindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientMessageWrapper, msg_),
  0,
  ~0u,
  ~0u,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CreateAccountWeb)},
  { 9, 16, sizeof(::AuthenticateWeb)},
  { 18, 24, sizeof(::CreateAccountWebSuccess)},
  { 25, 31, sizeof(::CreateAccountWebFailure)},
  { 32, 39, sizeof(::AuthenticateWebSuccess)},
  { 41, 47, sizeof(::AuthenticateWebFailure)},
  { 48, 60, sizeof(::ServerMessageWrapper)},
  { 66, 76, sizeof(::ClientMessageWrapper)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateAccountWeb_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AuthenticateWeb_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateAccountWebSuccess_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateAccountWebFailure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AuthenticateWebSuccess_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AuthenticateWebFailure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ServerMessageWrapper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientMessageWrapper_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "chat.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nchat.proto\"<\n\020CreateAccountWeb\022\r\n\005emai"
      "l\030\001 \002(\t\022\031\n\021plaintextPassword\030\002 \002(\t\";\n\017Au"
      "thenticateWeb\022\r\n\005email\030\001 \002(\t\022\031\n\021plaintex"
      "tPassword\030\002 \002(\t\")\n\027CreateAccountWebSucce"
      "ss\022\016\n\006userId\030\001 \002(\003\")\n\027CreateAccountWebFa"
      "ilure\022\016\n\006reason\030\001 \002(\003\">\n\026AuthenticateWeb"
      "Success\022\016\n\006userId\030\001 \002(\003\022\024\n\014creationDate\030"
      "\002 \002(\t\"(\n\026AuthenticateWebFailure\022\016\n\006reaso"
      "n\030\001 \002(\003\"\343\001\n\024ServerMessageWrapper\022\021\n\tmess"
      "ageID\030\001 \002(\003\022&\n\002m1\030\002 \001(\0132\030.CreateAccountW"
      "ebSuccessH\000\022&\n\002m2\030\003 \001(\0132\030.CreateAccountW"
      "ebFailureH\000\022%\n\002m3\030\004 \001(\0132\027.AuthenticateWe"
      "bSuccessH\000\022%\n\002m4\030\005 \001(\0132\027.AuthenticateWeb"
      "FailureH\000\022\023\n\013clientIndex\030\006 \002(\003B\005\n\003msg\"\206\001"
      "\n\024ClientMessageWrapper\022\021\n\tmessageID\030\001 \002("
      "\003\022\037\n\002m1\030\002 \001(\0132\021.CreateAccountWebH\000\022\036\n\002m2"
      "\030\003 \001(\0132\020.AuthenticateWebH\000\022\023\n\013clientInde"
      "x\030\006 \002(\003B\005\n\003msg"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 694);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "chat.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_chat_2eproto

// ===================================================================

void CreateAccountWeb::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountWeb::kEmailFieldNumber;
const int CreateAccountWeb::kPlaintextPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountWeb::CreateAccountWeb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2eproto::scc_info_CreateAccountWeb.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateAccountWeb)
}
CreateAccountWeb::CreateAccountWeb(const CreateAccountWeb& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plaintextpassword()) {
    plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
  }
  // @@protoc_insertion_point(copy_constructor:CreateAccountWeb)
}

void CreateAccountWeb::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateAccountWeb::~CreateAccountWeb() {
  // @@protoc_insertion_point(destructor:CreateAccountWeb)
  SharedDtor();
}

void CreateAccountWeb::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateAccountWeb::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAccountWeb::descriptor() {
  ::protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAccountWeb& CreateAccountWeb::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2eproto::scc_info_CreateAccountWeb.base);
  return *internal_default_instance();
}


void CreateAccountWeb::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateAccountWeb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      plaintextpassword_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateAccountWeb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateAccountWeb)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CreateAccountWeb.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string plaintextPassword = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plaintextpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CreateAccountWeb.plaintextPassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateAccountWeb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateAccountWeb)
  return false;
#undef DO_
}

void CreateAccountWeb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateAccountWeb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateAccountWeb.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // required string plaintextPassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateAccountWeb.plaintextPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plaintextpassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateAccountWeb)
}

::google::protobuf::uint8* CreateAccountWeb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateAccountWeb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateAccountWeb.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // required string plaintextPassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateAccountWeb.plaintextPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plaintextpassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateAccountWeb)
  return target;
}

size_t CreateAccountWeb::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CreateAccountWeb)
  size_t total_size = 0;

  if (has_email()) {
    // required string email = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  if (has_plaintextpassword()) {
    // required string plaintextPassword = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());
  }

  return total_size;
}
size_t CreateAccountWeb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateAccountWeb)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string email = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());

    // required string plaintextPassword = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAccountWeb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateAccountWeb)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAccountWeb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountWeb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateAccountWeb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateAccountWeb)
    MergeFrom(*source);
  }
}

void CreateAccountWeb::MergeFrom(const CreateAccountWeb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateAccountWeb)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_plaintextpassword();
      plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
    }
  }
}

void CreateAccountWeb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateAccountWeb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountWeb::CopyFrom(const CreateAccountWeb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateAccountWeb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAccountWeb::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CreateAccountWeb::Swap(CreateAccountWeb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountWeb::InternalSwap(CreateAccountWeb* other) {
  using std::swap;
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plaintextpassword_.Swap(&other->plaintextpassword_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAccountWeb::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateWeb::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateWeb::kEmailFieldNumber;
const int AuthenticateWeb::kPlaintextPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateWeb::AuthenticateWeb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2eproto::scc_info_AuthenticateWeb.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AuthenticateWeb)
}
AuthenticateWeb::AuthenticateWeb(const AuthenticateWeb& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plaintextpassword()) {
    plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
  }
  // @@protoc_insertion_point(copy_constructor:AuthenticateWeb)
}

void AuthenticateWeb::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthenticateWeb::~AuthenticateWeb() {
  // @@protoc_insertion_point(destructor:AuthenticateWeb)
  SharedDtor();
}

void AuthenticateWeb::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateWeb::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthenticateWeb::descriptor() {
  ::protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateWeb& AuthenticateWeb::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2eproto::scc_info_AuthenticateWeb.base);
  return *internal_default_instance();
}


void AuthenticateWeb::Clear() {
// @@protoc_insertion_point(message_clear_start:AuthenticateWeb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      email_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      plaintextpassword_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthenticateWeb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AuthenticateWeb)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AuthenticateWeb.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string plaintextPassword = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plaintextpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AuthenticateWeb.plaintextPassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AuthenticateWeb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AuthenticateWeb)
  return false;
#undef DO_
}

void AuthenticateWeb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AuthenticateWeb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AuthenticateWeb.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // required string plaintextPassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AuthenticateWeb.plaintextPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plaintextpassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AuthenticateWeb)
}

::google::protobuf::uint8* AuthenticateWeb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AuthenticateWeb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AuthenticateWeb.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // required string plaintextPassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AuthenticateWeb.plaintextPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plaintextpassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AuthenticateWeb)
  return target;
}

size_t AuthenticateWeb::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AuthenticateWeb)
  size_t total_size = 0;

  if (has_email()) {
    // required string email = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  if (has_plaintextpassword()) {
    // required string plaintextPassword = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());
  }

  return total_size;
}
size_t AuthenticateWeb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AuthenticateWeb)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string email = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());

    // required string plaintextPassword = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateWeb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AuthenticateWeb)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateWeb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateWeb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AuthenticateWeb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AuthenticateWeb)
    MergeFrom(*source);
  }
}

void AuthenticateWeb::MergeFrom(const AuthenticateWeb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AuthenticateWeb)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_plaintextpassword();
      plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
    }
  }
}

void AuthenticateWeb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AuthenticateWeb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateWeb::CopyFrom(const AuthenticateWeb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AuthenticateWeb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateWeb::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AuthenticateWeb::Swap(AuthenticateWeb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateWeb::InternalSwap(AuthenticateWeb* other) {
  using std::swap;
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plaintextpassword_.Swap(&other->plaintextpassword_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthenticateWeb::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAccountWebSuccess::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountWebSuccess::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountWebSuccess::CreateAccountWebSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2eproto::scc_info_CreateAccountWebSuccess.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateAccountWebSuccess)
}
CreateAccountWebSuccess::CreateAccountWebSuccess(const CreateAccountWebSuccess& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:CreateAccountWebSuccess)
}

void CreateAccountWebSuccess::SharedCtor() {
  userid_ = GOOGLE_LONGLONG(0);
}

CreateAccountWebSuccess::~CreateAccountWebSuccess() {
  // @@protoc_insertion_point(destructor:CreateAccountWebSuccess)
  SharedDtor();
}

void CreateAccountWebSuccess::SharedDtor() {
}

void CreateAccountWebSuccess::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAccountWebSuccess::descriptor() {
  ::protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAccountWebSuccess& CreateAccountWebSuccess::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2eproto::scc_info_CreateAccountWebSuccess.base);
  return *internal_default_instance();
}


void CreateAccountWebSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateAccountWebSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateAccountWebSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateAccountWebSuccess)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateAccountWebSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateAccountWebSuccess)
  return false;
#undef DO_
}

void CreateAccountWebSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateAccountWebSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateAccountWebSuccess)
}

::google::protobuf::uint8* CreateAccountWebSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateAccountWebSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateAccountWebSuccess)
  return target;
}

size_t CreateAccountWebSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateAccountWebSuccess)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 userId = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAccountWebSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateAccountWebSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAccountWebSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountWebSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateAccountWebSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateAccountWebSuccess)
    MergeFrom(*source);
  }
}

void CreateAccountWebSuccess::MergeFrom(const CreateAccountWebSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateAccountWebSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void CreateAccountWebSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateAccountWebSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountWebSuccess::CopyFrom(const CreateAccountWebSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateAccountWebSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAccountWebSuccess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CreateAccountWebSuccess::Swap(CreateAccountWebSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountWebSuccess::InternalSwap(CreateAccountWebSuccess* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAccountWebSuccess::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAccountWebFailure::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountWebFailure::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountWebFailure::CreateAccountWebFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2eproto::scc_info_CreateAccountWebFailure.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateAccountWebFailure)
}
CreateAccountWebFailure::CreateAccountWebFailure(const CreateAccountWebFailure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:CreateAccountWebFailure)
}

void CreateAccountWebFailure::SharedCtor() {
  reason_ = GOOGLE_LONGLONG(0);
}

CreateAccountWebFailure::~CreateAccountWebFailure() {
  // @@protoc_insertion_point(destructor:CreateAccountWebFailure)
  SharedDtor();
}

void CreateAccountWebFailure::SharedDtor() {
}

void CreateAccountWebFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateAccountWebFailure::descriptor() {
  ::protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAccountWebFailure& CreateAccountWebFailure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2eproto::scc_info_CreateAccountWebFailure.base);
  return *internal_default_instance();
}


void CreateAccountWebFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateAccountWebFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateAccountWebFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateAccountWebFailure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateAccountWebFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateAccountWebFailure)
  return false;
#undef DO_
}

void CreateAccountWebFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateAccountWebFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 reason = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateAccountWebFailure)
}

::google::protobuf::uint8* CreateAccountWebFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateAccountWebFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 reason = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateAccountWebFailure)
  return target;
}

size_t CreateAccountWebFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateAccountWebFailure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 reason = 1;
  if (has_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reason());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAccountWebFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateAccountWebFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAccountWebFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountWebFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateAccountWebFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateAccountWebFailure)
    MergeFrom(*source);
  }
}

void CreateAccountWebFailure::MergeFrom(const CreateAccountWebFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateAccountWebFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reason()) {
    set_reason(from.reason());
  }
}

void CreateAccountWebFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateAccountWebFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountWebFailure::CopyFrom(const CreateAccountWebFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateAccountWebFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAccountWebFailure::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CreateAccountWebFailure::Swap(CreateAccountWebFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountWebFailure::InternalSwap(CreateAccountWebFailure* other) {
  using std::swap;
  swap(reason_, other->reason_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateAccountWebFailure::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateWebSuccess::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateWebSuccess::kUserIdFieldNumber;
const int AuthenticateWebSuccess::kCreationDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateWebSuccess::AuthenticateWebSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2eproto::scc_info_AuthenticateWebSuccess.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AuthenticateWebSuccess)
}
AuthenticateWebSuccess::AuthenticateWebSuccess(const AuthenticateWebSuccess& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  creationdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_creationdate()) {
    creationdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creationdate_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:AuthenticateWebSuccess)
}

void AuthenticateWebSuccess::SharedCtor() {
  creationdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_LONGLONG(0);
}

AuthenticateWebSuccess::~AuthenticateWebSuccess() {
  // @@protoc_insertion_point(destructor:AuthenticateWebSuccess)
  SharedDtor();
}

void AuthenticateWebSuccess::SharedDtor() {
  creationdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateWebSuccess::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthenticateWebSuccess::descriptor() {
  ::protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateWebSuccess& AuthenticateWebSuccess::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2eproto::scc_info_AuthenticateWebSuccess.base);
  return *internal_default_instance();
}


void AuthenticateWebSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:AuthenticateWebSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    creationdate_.ClearNonDefaultToEmptyNoArena();
  }
  userid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthenticateWebSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AuthenticateWebSuccess)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string creationDate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creationdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creationdate().data(), static_cast<int>(this->creationdate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AuthenticateWebSuccess.creationDate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AuthenticateWebSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AuthenticateWebSuccess)
  return false;
#undef DO_
}

void AuthenticateWebSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AuthenticateWebSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 userId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  // required string creationDate = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creationdate().data(), static_cast<int>(this->creationdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AuthenticateWebSuccess.creationDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->creationdate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AuthenticateWebSuccess)
}

::google::protobuf::uint8* AuthenticateWebSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AuthenticateWebSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 userId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  // required string creationDate = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creationdate().data(), static_cast<int>(this->creationdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AuthenticateWebSuccess.creationDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->creationdate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AuthenticateWebSuccess)
  return target;
}

size_t AuthenticateWebSuccess::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AuthenticateWebSuccess)
  size_t total_size = 0;

  if (has_creationdate()) {
    // required string creationDate = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creationdate());
  }

  if (has_userid()) {
    // required int64 userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  return total_size;
}
size_t AuthenticateWebSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AuthenticateWebSuccess)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string creationDate = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creationdate());

    // required int64 userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateWebSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AuthenticateWebSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateWebSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateWebSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AuthenticateWebSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AuthenticateWebSuccess)
    MergeFrom(*source);
  }
}

void AuthenticateWebSuccess::MergeFrom(const AuthenticateWebSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AuthenticateWebSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_creationdate();
      creationdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creationdate_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthenticateWebSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AuthenticateWebSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateWebSuccess::CopyFrom(const AuthenticateWebSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AuthenticateWebSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateWebSuccess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AuthenticateWebSuccess::Swap(AuthenticateWebSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateWebSuccess::InternalSwap(AuthenticateWebSuccess* other) {
  using std::swap;
  creationdate_.Swap(&other->creationdate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthenticateWebSuccess::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateWebFailure::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateWebFailure::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateWebFailure::AuthenticateWebFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2eproto::scc_info_AuthenticateWebFailure.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AuthenticateWebFailure)
}
AuthenticateWebFailure::AuthenticateWebFailure(const AuthenticateWebFailure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:AuthenticateWebFailure)
}

void AuthenticateWebFailure::SharedCtor() {
  reason_ = GOOGLE_LONGLONG(0);
}

AuthenticateWebFailure::~AuthenticateWebFailure() {
  // @@protoc_insertion_point(destructor:AuthenticateWebFailure)
  SharedDtor();
}

void AuthenticateWebFailure::SharedDtor() {
}

void AuthenticateWebFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AuthenticateWebFailure::descriptor() {
  ::protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateWebFailure& AuthenticateWebFailure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2eproto::scc_info_AuthenticateWebFailure.base);
  return *internal_default_instance();
}


void AuthenticateWebFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:AuthenticateWebFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthenticateWebFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AuthenticateWebFailure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AuthenticateWebFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AuthenticateWebFailure)
  return false;
#undef DO_
}

void AuthenticateWebFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AuthenticateWebFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 reason = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AuthenticateWebFailure)
}

::google::protobuf::uint8* AuthenticateWebFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AuthenticateWebFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 reason = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AuthenticateWebFailure)
  return target;
}

size_t AuthenticateWebFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AuthenticateWebFailure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 reason = 1;
  if (has_reason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reason());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticateWebFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AuthenticateWebFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateWebFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateWebFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AuthenticateWebFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AuthenticateWebFailure)
    MergeFrom(*source);
  }
}

void AuthenticateWebFailure::MergeFrom(const AuthenticateWebFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AuthenticateWebFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reason()) {
    set_reason(from.reason());
  }
}

void AuthenticateWebFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AuthenticateWebFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateWebFailure::CopyFrom(const AuthenticateWebFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AuthenticateWebFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateWebFailure::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void AuthenticateWebFailure::Swap(AuthenticateWebFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateWebFailure::InternalSwap(AuthenticateWebFailure* other) {
  using std::swap;
  swap(reason_, other->reason_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AuthenticateWebFailure::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerMessageWrapper::InitAsDefaultInstance() {
  ::_ServerMessageWrapper_default_instance_.m1_ = const_cast< ::CreateAccountWebSuccess*>(
      ::CreateAccountWebSuccess::internal_default_instance());
  ::_ServerMessageWrapper_default_instance_.m2_ = const_cast< ::CreateAccountWebFailure*>(
      ::CreateAccountWebFailure::internal_default_instance());
  ::_ServerMessageWrapper_default_instance_.m3_ = const_cast< ::AuthenticateWebSuccess*>(
      ::AuthenticateWebSuccess::internal_default_instance());
  ::_ServerMessageWrapper_default_instance_.m4_ = const_cast< ::AuthenticateWebFailure*>(
      ::AuthenticateWebFailure::internal_default_instance());
}
void ServerMessageWrapper::set_allocated_m1(::CreateAccountWebSuccess* m1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (m1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m1, submessage_arena);
    }
    set_has_m1();
    msg_.m1_ = m1;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessageWrapper.m1)
}
void ServerMessageWrapper::set_allocated_m2(::CreateAccountWebFailure* m2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (m2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m2, submessage_arena);
    }
    set_has_m2();
    msg_.m2_ = m2;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessageWrapper.m2)
}
void ServerMessageWrapper::set_allocated_m3(::AuthenticateWebSuccess* m3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (m3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m3, submessage_arena);
    }
    set_has_m3();
    msg_.m3_ = m3;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessageWrapper.m3)
}
void ServerMessageWrapper::set_allocated_m4(::AuthenticateWebFailure* m4) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (m4) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m4 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m4, submessage_arena);
    }
    set_has_m4();
    msg_.m4_ = m4;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessageWrapper.m4)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessageWrapper::kMessageIDFieldNumber;
const int ServerMessageWrapper::kM1FieldNumber;
const int ServerMessageWrapper::kM2FieldNumber;
const int ServerMessageWrapper::kM3FieldNumber;
const int ServerMessageWrapper::kM4FieldNumber;
const int ServerMessageWrapper::kClientIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessageWrapper::ServerMessageWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2eproto::scc_info_ServerMessageWrapper.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMessageWrapper)
}
ServerMessageWrapper::ServerMessageWrapper(const ServerMessageWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&messageid_, &from.messageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&clientindex_) -
    reinterpret_cast<char*>(&messageid_)) + sizeof(clientindex_));
  clear_has_msg();
  switch (from.msg_case()) {
    case kM1: {
      mutable_m1()->::CreateAccountWebSuccess::MergeFrom(from.m1());
      break;
    }
    case kM2: {
      mutable_m2()->::CreateAccountWebFailure::MergeFrom(from.m2());
      break;
    }
    case kM3: {
      mutable_m3()->::AuthenticateWebSuccess::MergeFrom(from.m3());
      break;
    }
    case kM4: {
      mutable_m4()->::AuthenticateWebFailure::MergeFrom(from.m4());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerMessageWrapper)
}

void ServerMessageWrapper::SharedCtor() {
  ::memset(&messageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientindex_) -
      reinterpret_cast<char*>(&messageid_)) + sizeof(clientindex_));
  clear_has_msg();
}

ServerMessageWrapper::~ServerMessageWrapper() {
  // @@protoc_insertion_point(destructor:ServerMessageWrapper)
  SharedDtor();
}

void ServerMessageWrapper::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void ServerMessageWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerMessageWrapper::descriptor() {
  ::protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMessageWrapper& ServerMessageWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2eproto::scc_info_ServerMessageWrapper.base);
  return *internal_default_instance();
}


void ServerMessageWrapper::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:ServerMessageWrapper)
  switch (msg_case()) {
    case kM1: {
      delete msg_.m1_;
      break;
    }
    case kM2: {
      delete msg_.m2_;
      break;
    }
    case kM3: {
      delete msg_.m3_;
      break;
    }
    case kM4: {
      delete msg_.m4_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void ServerMessageWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&messageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clientindex_) -
        reinterpret_cast<char*>(&messageid_)) + sizeof(clientindex_));
  }
  clear_msg();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerMessageWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMessageWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 messageID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_messageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &messageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CreateAccountWebSuccess m1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CreateAccountWebFailure m2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .AuthenticateWebSuccess m3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .AuthenticateWebFailure m4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 clientIndex = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_clientindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &clientindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMessageWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMessageWrapper)
  return false;
#undef DO_
}

void ServerMessageWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 messageID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->messageid(), output);
  }

  switch (msg_case()) {
    case kM1:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_m1(), output);
      break;
    case kM2:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_m2(), output);
      break;
    case kM3:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_m3(), output);
      break;
    case kM4:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_m4(), output);
      break;
    default: ;
  }
  // required int64 clientIndex = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->clientindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerMessageWrapper)
}

::google::protobuf::uint8* ServerMessageWrapper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 messageID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->messageid(), target);
  }

  switch (msg_case()) {
    case kM1:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_m1(), deterministic, target);
      break;
    case kM2:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_m2(), deterministic, target);
      break;
    case kM3:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          4, this->_internal_m3(), deterministic, target);
      break;
    case kM4:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          5, this->_internal_m4(), deterministic, target);
      break;
    default: ;
  }
  // required int64 clientIndex = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->clientindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerMessageWrapper)
  return target;
}

size_t ServerMessageWrapper::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ServerMessageWrapper)
  size_t total_size = 0;

  if (has_messageid()) {
    // required int64 messageID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->messageid());
  }

  if (has_clientindex()) {
    // required int64 clientIndex = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->clientindex());
  }

  return total_size;
}
size_t ServerMessageWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMessageWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 messageID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->messageid());

    // required int64 clientIndex = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->clientindex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  switch (msg_case()) {
    // optional .CreateAccountWebSuccess m1 = 2;
    case kM1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.m1_);
      break;
    }
    // optional .CreateAccountWebFailure m2 = 3;
    case kM2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.m2_);
      break;
    }
    // optional .AuthenticateWebSuccess m3 = 4;
    case kM3: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.m3_);
      break;
    }
    // optional .AuthenticateWebFailure m4 = 5;
    case kM4: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.m4_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessageWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMessageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessageWrapper* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessageWrapper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMessageWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMessageWrapper)
    MergeFrom(*source);
  }
}

void ServerMessageWrapper::MergeFrom(const ServerMessageWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMessageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      messageid_ = from.messageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      clientindex_ = from.clientindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.msg_case()) {
    case kM1: {
      mutable_m1()->::CreateAccountWebSuccess::MergeFrom(from.m1());
      break;
    }
    case kM2: {
      mutable_m2()->::CreateAccountWebFailure::MergeFrom(from.m2());
      break;
    }
    case kM3: {
      mutable_m3()->::AuthenticateWebSuccess::MergeFrom(from.m3());
      break;
    }
    case kM4: {
      mutable_m4()->::AuthenticateWebFailure::MergeFrom(from.m4());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void ServerMessageWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMessageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessageWrapper::CopyFrom(const ServerMessageWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMessageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessageWrapper::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  switch (msg_case()) {
    case kM1: {
      if (has_m1()) {
        if (!this->m1().IsInitialized()) return false;
      }
      break;
    }
    case kM2: {
      if (has_m2()) {
        if (!this->m2().IsInitialized()) return false;
      }
      break;
    }
    case kM3: {
      if (has_m3()) {
        if (!this->m3().IsInitialized()) return false;
      }
      break;
    }
    case kM4: {
      if (has_m4()) {
        if (!this->m4().IsInitialized()) return false;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return true;
}

void ServerMessageWrapper::Swap(ServerMessageWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessageWrapper::InternalSwap(ServerMessageWrapper* other) {
  using std::swap;
  swap(messageid_, other->messageid_);
  swap(clientindex_, other->clientindex_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerMessageWrapper::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientMessageWrapper::InitAsDefaultInstance() {
  ::_ClientMessageWrapper_default_instance_.m1_ = const_cast< ::CreateAccountWeb*>(
      ::CreateAccountWeb::internal_default_instance());
  ::_ClientMessageWrapper_default_instance_.m2_ = const_cast< ::AuthenticateWeb*>(
      ::AuthenticateWeb::internal_default_instance());
}
void ClientMessageWrapper::set_allocated_m1(::CreateAccountWeb* m1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (m1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m1, submessage_arena);
    }
    set_has_m1();
    msg_.m1_ = m1;
  }
  // @@protoc_insertion_point(field_set_allocated:ClientMessageWrapper.m1)
}
void ClientMessageWrapper::set_allocated_m2(::AuthenticateWeb* m2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (m2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      m2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, m2, submessage_arena);
    }
    set_has_m2();
    msg_.m2_ = m2;
  }
  // @@protoc_insertion_point(field_set_allocated:ClientMessageWrapper.m2)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMessageWrapper::kMessageIDFieldNumber;
const int ClientMessageWrapper::kM1FieldNumber;
const int ClientMessageWrapper::kM2FieldNumber;
const int ClientMessageWrapper::kClientIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMessageWrapper::ClientMessageWrapper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_chat_2eproto::scc_info_ClientMessageWrapper.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientMessageWrapper)
}
ClientMessageWrapper::ClientMessageWrapper(const ClientMessageWrapper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&messageid_, &from.messageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&clientindex_) -
    reinterpret_cast<char*>(&messageid_)) + sizeof(clientindex_));
  clear_has_msg();
  switch (from.msg_case()) {
    case kM1: {
      mutable_m1()->::CreateAccountWeb::MergeFrom(from.m1());
      break;
    }
    case kM2: {
      mutable_m2()->::AuthenticateWeb::MergeFrom(from.m2());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ClientMessageWrapper)
}

void ClientMessageWrapper::SharedCtor() {
  ::memset(&messageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientindex_) -
      reinterpret_cast<char*>(&messageid_)) + sizeof(clientindex_));
  clear_has_msg();
}

ClientMessageWrapper::~ClientMessageWrapper() {
  // @@protoc_insertion_point(destructor:ClientMessageWrapper)
  SharedDtor();
}

void ClientMessageWrapper::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void ClientMessageWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientMessageWrapper::descriptor() {
  ::protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientMessageWrapper& ClientMessageWrapper::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_chat_2eproto::scc_info_ClientMessageWrapper.base);
  return *internal_default_instance();
}


void ClientMessageWrapper::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:ClientMessageWrapper)
  switch (msg_case()) {
    case kM1: {
      delete msg_.m1_;
      break;
    }
    case kM2: {
      delete msg_.m2_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void ClientMessageWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientMessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&messageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clientindex_) -
        reinterpret_cast<char*>(&messageid_)) + sizeof(clientindex_));
  }
  clear_msg();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClientMessageWrapper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientMessageWrapper)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 messageID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_messageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &messageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CreateAccountWeb m1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .AuthenticateWeb m2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_m2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 clientIndex = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_clientindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &clientindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientMessageWrapper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientMessageWrapper)
  return false;
#undef DO_
}

void ClientMessageWrapper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientMessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 messageID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->messageid(), output);
  }

  switch (msg_case()) {
    case kM1:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_m1(), output);
      break;
    case kM2:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_m2(), output);
      break;
    default: ;
  }
  // required int64 clientIndex = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->clientindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientMessageWrapper)
}

::google::protobuf::uint8* ClientMessageWrapper::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientMessageWrapper)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 messageID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->messageid(), target);
  }

  switch (msg_case()) {
    case kM1:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          2, this->_internal_m1(), deterministic, target);
      break;
    case kM2:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          3, this->_internal_m2(), deterministic, target);
      break;
    default: ;
  }
  // required int64 clientIndex = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->clientindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientMessageWrapper)
  return target;
}

size_t ClientMessageWrapper::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClientMessageWrapper)
  size_t total_size = 0;

  if (has_messageid()) {
    // required int64 messageID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->messageid());
  }

  if (has_clientindex()) {
    // required int64 clientIndex = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->clientindex());
  }

  return total_size;
}
size_t ClientMessageWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientMessageWrapper)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 messageID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->messageid());

    // required int64 clientIndex = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->clientindex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  switch (msg_case()) {
    // optional .CreateAccountWeb m1 = 2;
    case kM1: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.m1_);
      break;
    }
    // optional .AuthenticateWeb m2 = 3;
    case kM2: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.m2_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessageWrapper::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientMessageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessageWrapper* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientMessageWrapper>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientMessageWrapper)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientMessageWrapper)
    MergeFrom(*source);
  }
}

void ClientMessageWrapper::MergeFrom(const ClientMessageWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientMessageWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      messageid_ = from.messageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      clientindex_ = from.clientindex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.msg_case()) {
    case kM1: {
      mutable_m1()->::CreateAccountWeb::MergeFrom(from.m1());
      break;
    }
    case kM2: {
      mutable_m2()->::AuthenticateWeb::MergeFrom(from.m2());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void ClientMessageWrapper::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientMessageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessageWrapper::CopyFrom(const ClientMessageWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientMessageWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessageWrapper::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  switch (msg_case()) {
    case kM1: {
      if (has_m1()) {
        if (!this->m1().IsInitialized()) return false;
      }
      break;
    }
    case kM2: {
      if (has_m2()) {
        if (!this->m2().IsInitialized()) return false;
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return true;
}

void ClientMessageWrapper::Swap(ClientMessageWrapper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMessageWrapper::InternalSwap(ClientMessageWrapper* other) {
  using std::swap;
  swap(messageid_, other->messageid_);
  swap(clientindex_, other->clientindex_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientMessageWrapper::GetMetadata() const {
  protobuf_chat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_chat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CreateAccountWeb* Arena::CreateMaybeMessage< ::CreateAccountWeb >(Arena* arena) {
  return Arena::CreateInternal< ::CreateAccountWeb >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AuthenticateWeb* Arena::CreateMaybeMessage< ::AuthenticateWeb >(Arena* arena) {
  return Arena::CreateInternal< ::AuthenticateWeb >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CreateAccountWebSuccess* Arena::CreateMaybeMessage< ::CreateAccountWebSuccess >(Arena* arena) {
  return Arena::CreateInternal< ::CreateAccountWebSuccess >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CreateAccountWebFailure* Arena::CreateMaybeMessage< ::CreateAccountWebFailure >(Arena* arena) {
  return Arena::CreateInternal< ::CreateAccountWebFailure >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AuthenticateWebSuccess* Arena::CreateMaybeMessage< ::AuthenticateWebSuccess >(Arena* arena) {
  return Arena::CreateInternal< ::AuthenticateWebSuccess >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AuthenticateWebFailure* Arena::CreateMaybeMessage< ::AuthenticateWebFailure >(Arena* arena) {
  return Arena::CreateInternal< ::AuthenticateWebFailure >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServerMessageWrapper* Arena::CreateMaybeMessage< ::ServerMessageWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::ServerMessageWrapper >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ClientMessageWrapper* Arena::CreateMaybeMessage< ::ClientMessageWrapper >(Arena* arena) {
  return Arena::CreateInternal< ::ClientMessageWrapper >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
